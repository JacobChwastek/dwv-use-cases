{"version":3,"sources":["components/dwv/TagsTable.js","components/dwv/DwvComponent.js","components/common/CustomCard.tsx","components/common/CustomSelect.tsx","components/common/NumericInput.tsx","utils/math.ts","components/PointCenterMenu.tsx","components/ThreePointsMenu.tsx","views/DwvView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TagsTable","props","columns","title","dataIndex","key","state","data","this","dataSource","React","Component","dwv","gui","getElement","base","image","decoderScripts","DwvComponent","initializeDwv","app","App","init","tools","addEventListeners","setState","dwvApp","setupDropbox","utils","loadFromUri","window","location","href","nReceivedError","nReceivedAbort","addEventListener","event","loadProgress","loaded","metaData","objectToArray","getMetaData","selectedTool","isMonoSliceData","getImage","getNumberOfFrames","onChangeTool","hideDropbox","dataLoaded","alert","handleDicomLoadedState","frame","console","error","defaultOnKeydown","updateDrawingState","obj","id","onResize","a","mode","State","jsonStr","toJSON","json","JSON","parse","onStateChange","addNewShape","deleteShape","getFramesNumberOfDicom","frameInfo","find","el","name","frames","value","parseInt","removeDrawings","deleteDraws","handleReset","tool","options","Draw","setTool","onChangeShape","shape","setDrawShape","handleTagsDialogOpen","showDicomTags","handleTagsDialogClose","layerContainer","onDragOver","onDragLeave","onDrop","box","dropboxClassName","dropBoxSize","getLayerContainerSize","height","setAttribute","borderClassName","hoverClassName","stopPropagation","preventDefault","className","indexOf","replace","parentNode","removeChild","loadFiles","dataTransfer","files","drawCircle","circle","center","x","y","r","c","math","Point2D","shapeGroup","draw","EllipseFactory","prototype","create","getStyle","layer","getDrawController","getDrawLayer","add","updatePropsParams","forEach","meta","group","element","handlePixelSpacing","onCanvasClick","e","getImageLayer","getImageData","width","canvas","getCanvas","xFactor","yFactor","clientX","target","getBoundingClientRect","left","clientY","top","addPoint","type","events","ZoomAndPan","prevProps","dicom","arr","hasPixelSpacing","reset","log","percent","onClick","disabled","visible","onCancel","footer","calculateClickPosition","CCard","styled","Card","CustomCard","bordered","children","Option","Select","CSelect","Wrapper","div","CustomSelect","selectedOption","onChange","placeholder","map","option","label","icon","InfoCircleOutlined","Modal","info","content","infoContent","onOk","NumericInput","isNaN","test","onBlur","_","isString","valueTemp","charAt","length","slice","list","split","prefix","num","result","formatNumber","tooltipText","trigger","tooltip","placement","overlayClassName","defaultValue","maxLength","pixelToCm","pixelSpacing","verifyPixelSpacing","parseFloat","InputWrapper","Input","Group","CButton","Button","PointCenterMenu","useState","selectState","setSelectState","onInputChange","input","radius","cmToPixel","handleRadiusChange","gutter","span","compact","points","onOptionChange","handlePointsButton","Menu","ThreePointsMenu","toFixed","suffix","DwvView","isDicomLoaded","handleDraw","handleOptionChange","menuOption","canChoosePoints","action","handleAddPoint","b","point","x12","x13","y12","y13","y31","y21","x31","x21","sx13","Math","pow","sy13","sx21","sy21","f","g","h","k","sqr_of_r","sqrt","getCircleThrough3Point","Dwv","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1d784ad1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nclass TagsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            data: this.props.data,\r\n        };\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: 'Tag',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'Value',\r\n            dataIndex: 'value',\r\n            key: 'value'\r\n        },\r\n    ];\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        \r\n        return (            \r\n            <Table dataSource={data} columns={this.columns} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TagsTable;\r\n","import React from 'react';\r\nimport { Progress, Button, Row, Modal } from 'antd';\r\nimport _ from 'lodash';\r\nimport dwv from 'dwv';\r\n\r\nimport TagsTable from './TagsTable';\r\nimport './DwvComponent.css';\r\n\r\ndwv.gui.getElement = dwv.gui.base.getElement;\r\n\r\ndwv.image.decoderScripts = {\r\n    \"jpeg2000\": \"assets/dwv/decoders/pdfjs/decode-jpeg2000.js\",\r\n    \"jpeg-lossless\": \"assets/dwv/decoders/rii-mango/decode-jpegloss.js\",\r\n    \"jpeg-baseline\": \"assets/dwv/decoders/pdfjs/decode-jpegbaseline.js\",\r\n    \"rle\": \"assets/dwv/decoders/dwv/decode-rle.js\"\r\n};\r\n\r\nclass DwvComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tools: {\r\n                Draw: {\r\n                    options: ['Ellipse'],\r\n                    type: 'factory',\r\n                    events: ['draw-create', 'draw-change', 'draw-move', 'draw-delete']\r\n                },\r\n                ZoomAndPan: {}\r\n            },\r\n            selectedTool: 'Select Tool',\r\n            loadProgress: 0,\r\n            dataLoaded: false,\r\n            dwvApp: null,\r\n            metaData: [],\r\n            showDicomTags: false,\r\n            dropboxClassName: 'dropBox',\r\n            borderClassName: 'dropBoxBorder',\r\n            hoverClassName: 'hover',\r\n            frame: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initializeDwv();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if ((this.props.dicom !== prevProps.dicom) && this.props.dicom !== null) {\r\n            const arr = [this.props.dicom];\r\n            this.state.dwvApp.loadFiles(arr);\r\n        }\r\n\r\n        if (this.props.selectedTool !== prevProps.selectedTool) {\r\n            this.onChangeTool(this.props.selectedTool);\r\n        }\r\n\r\n        if (!this.props.hasPixelSpacing) { this.updatePropsParams(); }\r\n\r\n        if (this.props.draw) { this.drawCircle(); }\r\n\r\n        if(this.props.reset){ console.log(\"xd\"); this.removeDrawings(); }\r\n      }\r\n\r\n    render() {\r\n        const { loadProgress, dataLoaded, metaData, selectedTool, showDicomTags } = this.state;\r\n\r\n        return (\r\n            <div id='dwv'>\r\n                <Progress percent={loadProgress} />\r\n                <Button onClick={this.handleTagsDialogOpen} disabled={!dataLoaded}>\r\n                    Tagi DICOM\r\n                </Button>\r\n                {selectedTool === 'Draw' && <Row>Dodawanie / Edycja artefaktu...</Row>}\r\n                <Modal\r\n                    visible={showDicomTags}\r\n                    onCancel={this.handleTagsDialogClose}\r\n                    width={1000}\r\n                    footer={null}\r\n                >\r\n                    <TagsTable data={metaData} />\r\n                </Modal>\r\n                <div className=\"layerContainer\">\r\n                    <div className=\"dropBox dropBoxBorder\">\r\n                        Przeciągnij i upuść tutaj\r\n                    </div>\r\n                    <canvas className=\"imageLayer\" onClick={this.calculateClickPosition} onClick={e => this.onCanvasClick(e)}>\r\n                        Only for HTML5 compatible browsers...\r\n                    </canvas>\r\n                    <div className=\"drawDiv\"></div>\r\n                </div>\r\n                { this.getFramesNumberOfDicom() && `Frame: ${this.state.frame} / ${this.getFramesNumberOfDicom()}` }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    initializeDwv = () => {\r\n        var app = new dwv.App();\r\n        \r\n        app.init({\r\n            \"containerDivId\": \"dwv\",\r\n            \"tools\": this.state.tools\r\n        });\r\n\r\n        this.addEventListeners(app);\r\n\r\n        this.setState({ dwvApp: app });\r\n\r\n        this.setupDropbox(app);\r\n\r\n        dwv.utils.loadFromUri(window.location.href, app);\r\n    }\r\n\r\n    addEventListeners = (app) => {\r\n        let nReceivedError = null;\r\n        let nReceivedAbort = null;\r\n        \r\n        app.addEventListener('load-start', () => {\r\n            nReceivedError = 0;\r\n            nReceivedAbort = 0;\r\n        });\r\n        \r\n        app.addEventListener(\"load-progress\", (event) => {\r\n            this.setState({ loadProgress: event.loaded });\r\n        });\r\n        \r\n        app.addEventListener(\"load\", () => {\r\n            this.setState({ metaData: dwv.utils.objectToArray(app.getMetaData()) });\r\n            let selectedTool = 'Scroll'\r\n            if (app.isMonoSliceData() && app.getImage().getNumberOfFrames() === 1) {\r\n                selectedTool = 'ZoomAndPan';\r\n            }\r\n            this.onChangeTool(selectedTool);\r\n            this.hideDropbox();\r\n            this.setState({ dataLoaded: true });\r\n        });\r\n        \r\n        app.addEventListener('load-end', () => {\r\n            if (nReceivedError) {\r\n                this.setState({ loadProgress: 0 });\r\n                alert('Received errors during load. Check log for details.');\r\n            }\r\n            if (nReceivedAbort) {\r\n                this.setState({ loadProgress: 0 });\r\n                alert('Load was aborted.');\r\n            }\r\n            this.setState({ loadProgress: 100 }, () => {\r\n                this.props.handleDicomLoadedState(true);\r\n            });\r\n        });\r\n        \r\n        app.addEventListener('frame-change', (event) => {\r\n            this.setState({ frame: event.frame })\r\n        });\r\n        \r\n        app.addEventListener('error', (event) => {\r\n            console.error(event.error);\r\n            ++nReceivedError;\r\n        });\r\n        \r\n        app.addEventListener('abort', () => {\r\n            ++nReceivedAbort;\r\n        });\r\n\r\n        app.addEventListener('keydown', (event) => {\r\n            app.defaultOnKeydown(event);\r\n        });\r\n\r\n        app.addEventListener('draw-move', () => {\r\n            this.updateDrawingState();\r\n        });\r\n        app.addEventListener('draw-change', () => {\r\n            this.updateDrawingState();\r\n        });\r\n\r\n        app.addEventListener('draw-create', (obj) => {\r\n            this.updateDrawingState('add', obj.id);\r\n        });\r\n\r\n        app.addEventListener('draw-delete', (obj) => {\r\n            this.updateDrawingState('delete', obj.id);\r\n        });\r\n\r\n        window.addEventListener('resize', app.onResize);\r\n    }\r\n\r\n    updateDrawingState = async (mode = null, id = null) => {\r\n        const { dwvApp } = this.state;\r\n        \r\n        if (dwvApp) {\r\n            const state = new dwv.State();\r\n            const jsonStr = state.toJSON(dwvApp); \r\n            const json = JSON.parse(jsonStr);\r\n\r\n            await this.props.onStateChange &&  this.props.onStateChange(json);\r\n\r\n            if (mode === 'add') {\r\n                this.props.addNewShape && this.props.addNewShape(id);\r\n            }\r\n\r\n            if (mode === 'delete') {\r\n                this.props.addNewShape && this.props.deleteShape(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    getFramesNumberOfDicom = () => {\r\n        const { metaData } = this.state;\r\n\r\n        if (metaData) {\r\n            const frameInfo = metaData.find(el => el.name === 'NumberOfFrames');\r\n            const frames = frameInfo && frameInfo.value;\r\n\r\n            return frames && parseInt(frames) - 1 \r\n        }\r\n    } \r\n    \r\n    removeDrawings = () => {\r\n        const { dwvApp } = this.state;\r\n        dwvApp.deleteDraws();\r\n        this.props.handleReset && this.props.handleReset(false);\r\n    }\r\n\r\n    onChangeTool = tool => {\r\n        const {dwvApp, tools: {Draw: {options}}} = this.state;\r\n\r\n        if (dwvApp) {\r\n            this.setState({ selectedTool: tool });\r\n            dwvApp.setTool(tool);\r\n\r\n            if (tool === 'Draw') {\r\n                this.onChangeShape(options[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeShape = shape => {\r\n        const { dwvApp } = this.state;\r\n\r\n        if (dwvApp) { dwvApp.setDrawShape(shape); }\r\n    }\r\n\r\n    handleTagsDialogOpen = () => {\r\n        this.setState({ showDicomTags: true });\r\n    }\r\n\r\n    handleTagsDialogClose = () => {\r\n        this.setState({ showDicomTags: false });\r\n    };\r\n\r\n    setupDropbox = app => {\r\n        \r\n        const layerContainer = app.getElement('layerContainer');\r\n\r\n        if (layerContainer) {\r\n            layerContainer.addEventListener('dragover', this.onDragOver);\r\n            layerContainer.addEventListener('dragleave', this.onDragLeave);\r\n            layerContainer.addEventListener('drop', this.onDrop);\r\n        }\r\n\r\n        const box = app.getElement(this.state.dropboxClassName);\r\n\r\n        if (box) {\r\n            const size = app.getLayerContainerSize();\r\n            const dropBoxSize = 2 * size.height / 3;\r\n\r\n            box.setAttribute('style', 'width:' + dropBoxSize + 'px;height:' + dropBoxSize + 'px');\r\n        }\r\n    }\r\n\r\n    onDragOver = event => {\r\n        const { dwvApp, borderClassName, hoverClassName } = this.state;\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const box = dwvApp.getElement(borderClassName);\r\n\r\n        if (box && box.className.indexOf(hoverClassName) === -1) {\r\n            box.className += ' ' + hoverClassName;\r\n        }\r\n    }\r\n\r\n    onDragLeave = event => {\r\n        const { dwvApp, hoverClassName} = this.state;\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const box = dwvApp.getElement(this.borderClassName + ' hover');\r\n\r\n        if (box && box.className.indexOf(hoverClassName) !== -1) {\r\n            box.className = box.className.replace(' ' + hoverClassName, '');\r\n        }\r\n    }\r\n\r\n    hideDropbox = () => {\r\n        const { dwvApp, dropboxClassName} = this.state;\r\n\r\n        const box = dwvApp.getElement(dropboxClassName);\r\n\r\n        if (box) { box.parentNode.removeChild(box); }\r\n    }\r\n\r\n    onDrop = event => {\r\n        const { dwvApp } = this.state;\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        \r\n        dwvApp.loadFiles(event.dataTransfer.files);\r\n        this.hideDropbox();\r\n    }\r\n\r\n    drawCircle = () => {\r\n        const { dwvApp, loadProgress, dataLoaded } = this.state;\r\n        const { circle: { center: { x, y }, r } } = this.props;\r\n\r\n        if (dwvApp && dataLoaded && loadProgress === 100) {\r\n            const c = new dwv.math.Point2D(x, y);\r\n            const a = new dwv.math.Point2D(x + r, y + r);\r\n\r\n            const shapeGroup = new dwv.tool.draw.EllipseFactory.prototype.create(\r\n                [c, a],\r\n                dwvApp.getStyle(),\r\n                dwvApp.getImage()\r\n            );\r\n\r\n            const layer = dwvApp.getDrawController().getDrawLayer();\r\n\r\n            layer.add(shapeGroup);\r\n\r\n            layer.draw();\r\n        }\r\n    };\r\n\r\n    updatePropsParams = () => {\r\n        const { metaData } = this.state;\r\n\r\n        metaData.forEach( meta => {\r\n\r\n            // mA\r\n            if (meta.group === \"0x0018\" && meta.element === \"0x1151\") {\r\n            }\r\n            //kV\r\n            if (meta.group === \"0x0018\" && meta.element === \"0x0060\") {\r\n            } \r\n\r\n            if (meta.group === \"0x0028\" && meta.element === \"0x0030\") {\r\n                this.props.handlePixelSpacing && this.props.handlePixelSpacing(meta.value);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    onCanvasClick = e => {\r\n        const { dwvApp } = this.state;\r\n\r\n        const layer = dwvApp.getImageLayer();\r\n\r\n        const { width, height } = dwvApp.getImageData();\r\n\r\n        const canvas = layer.getCanvas();\r\n\r\n        const xFactor = width / canvas.width;\r\n        const yFactor = height / canvas.height;\r\n\r\n        const x = (e.clientX - e.target.getBoundingClientRect().left) * xFactor;\r\n        const y = (e.clientY - e.target.getBoundingClientRect().top) * yFactor;\r\n\r\n        this.props.addPoint && this.props.addPoint(x, y);\r\n    };\r\n\r\n\r\n\r\n} \r\n\r\nexport default DwvComponent;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport type Props = {\r\n    title?: string,\r\n    bordered?: boolean\r\n    children?: JSX.Element | JSX.Element[] | string\r\n    \r\n}\r\n\r\nconst CustomCard = (props: Props) => {\r\n    return (\r\n        <CCard title={props?.title} bordered={props?.bordered}>\r\n            {props?.children}\r\n        </CCard>\r\n    );\r\n};\r\n\r\nconst CCard = styled(Card)`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    .ant-card-head {\r\n        border-bottom: 0px;\r\n    }\r\n\r\n    .ant-card-body {\r\n        padding-top: 0px;\r\n    }\r\n\r\n    .ant-card-head-title {\r\n        color: #55595d;\r\n    }\r\n`;\r\n\r\nexport default CustomCard;\r\n","import React from \"react\";\r\nimport { Select, Button, Modal } from \"antd\";\r\nimport { InfoCircleOutlined } from \"@ant-design/icons\"\r\nimport styled from \"styled-components\";\r\n\r\nconst { Option } = Select;\r\n\r\ntype Option = {\r\n    value: any;\r\n    label: string;\r\n};\r\n\r\ntype InfoProps = {\r\n    title?: string;\r\n    infoContent?: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport type Props = {\r\n    options: Array<Option>;\r\n    selectedOption?: any;\r\n    onChange: (value: any) => void;\r\n    disabled?: boolean;\r\n    placeholder?: string;\r\n} & InfoProps;\r\n\r\nconst CustomSelect = (props: Props) => {\r\n    \r\n    const info = () => {\r\n        Modal.info({\r\n            title: props?.title,\r\n            content: props?.infoContent,\r\n            onOk() { },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <CSelect value={props?.selectedOption} onChange={e => props.onChange(e)} disabled={props?.disabled} placeholder={props?.placeholder}>\r\n                {props.options &&\r\n                    props.options.map(option => (\r\n                        <Option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </Option>\r\n                    ))}\r\n            </CSelect>\r\n            <Button icon={<InfoCircleOutlined />} onClick={info}/>\r\n        </Wrapper>\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\nconst CSelect = styled(Select)`\r\n    width: 100%;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\n\r\nexport default CustomSelect;\r\n","import React, { Component } from \"react\"\r\nimport { Input, Tooltip } from 'antd';\r\nimport _ from \"lodash\"\r\n\r\ntype State = {\r\n\r\n}\r\n\r\ntype Props = {\r\n    value: any;\r\n    onChange: (value: any) => void;\r\n    onBlur?: () => void;\r\n    tooltip?: boolean;\r\n    tooltipText?: string;\r\n    placeholder?: string;\r\n    disabled?: boolean;\r\n    defaultValue?: number;\r\n}\r\n\r\n\r\nclass NumericInput extends Component<Props, State> {\r\n\r\n    render() {\r\n        const { value } = this.props;\r\n\r\n        const title = value ? (\r\n            <span className=\"numeric-input-title\">{value !== '-' ? formatNumber(value) : '-'}</span>\r\n        ) : (\r\n                this.props?.tooltipText\r\n            );\r\n\r\n        return (\r\n            <Tooltip\r\n                trigger={['focus']}\r\n                title={title}\r\n                visible={this.props?.tooltip}\r\n                placement=\"topLeft\"\r\n                overlayClassName=\"numeric-input\"\r\n            >\r\n                <Input\r\n                    defaultValue={this.props?.defaultValue}\r\n                    disabled={this.props?.disabled}\r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    value={`${this.props.value}`}\r\n                    placeholder={this.props?.placeholder}\r\n                    maxLength={25}\r\n                />\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    onChange = (e: any) => {\r\n        const { value } = e.target;\r\n        const reg = /^-?\\d*(\\.\\d*)?$/;\r\n        if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\r\n            this.props.onChange(value);\r\n        }\r\n    };\r\n\r\n    onBlur = () => {\r\n        const { value, onBlur, onChange } = this.props;\r\n\r\n        if (_.isString(value)) {\r\n            let valueTemp = value;\r\n            if (value.charAt(value.length - 1) === '.' || value === '-') {\r\n                valueTemp = value.slice(0, -1);\r\n            }\r\n            onChange(valueTemp.replace(/0*(\\d+)/, '$1'));\r\n            if (onBlur) {\r\n                onBlur();\r\n            }\r\n        }\r\n\r\n    };\r\n}\r\n\r\nfunction formatNumber(value: string) {\r\n    value += '';\r\n    const list = value.split('.');\r\n    const prefix = list[0].charAt(0) === '-' ? '-' : '';\r\n    let num = prefix ? list[0].slice(1) : list[0];\r\n    let result = '';\r\n    while (num.length > 3) {\r\n        result = `,${num.slice(-3)}${result}`;\r\n        num = num.slice(0, num.length - 3);\r\n    }\r\n    if (num) {\r\n        result = num + result;\r\n    }\r\n    return `${prefix}${result}${list[1] ? `.${list[1]}` : ''}`;\r\n}\r\n\r\n\r\nexport default NumericInput;","import { Point, Circle } from \"./Models\";\r\nimport _ from \"lodash\"\r\nexport const getCircleThrough3Point = (a: Point, b: Point, c: Point): Circle => {\r\n    \r\n    const x12 = a.x - b.x;\r\n    const x13 = a.x - c.x;\r\n\r\n    const y12 = a.y - b.y;\r\n    const y13 = a.y - c.y;\r\n\r\n    const y31 = c.y - a.y;\r\n    const y21 = b.y - a.y;\r\n\r\n    const x31 = c.x - a.x;\r\n    const x21 = b.x - a.x;\r\n\r\n    const sx13 = Math.pow(a.x, 2) - Math.pow(c.x, 2);\r\n    const sy13 = Math.pow(a.y, 2) - Math.pow(c.y, 2);\r\n    const sx21 = Math.pow(b.x, 2) - Math.pow(a.x, 2);\r\n    const sy21 = Math.pow(b.y, 2) - Math.pow(a.y, 2);\r\n\r\n    const f: number = ((sx13) * (x12)\r\n        + (sy13) * (x12)\r\n        + (sx21) * (x13)\r\n        + (sy21) * (x13))\r\n        / (2 * ((y31) * (x12) - (y21) * (x13)));\r\n        \r\n    const g: number = ((sx13) * (y12)\r\n        + (sy13) * (y12)\r\n        + (sx21) * (y13)\r\n        + (sy21) * (y13))\r\n        / (2 * ((x31) * (y12) - (x21) * (y13)));\r\n\r\n    const cc = -Math.pow(a.x, 2) - Math.pow(a.y, 2) - 2 * g * a.x - 2 * f * a.y;\r\n\r\n    const h: number = -1 * g;\r\n    const k: number = -1 * f;\r\n    const sqr_of_r = h * h + k * k - cc;\r\n\r\n    const r = Math.sqrt(sqr_of_r);\r\n\r\n    const center: Point = { x: h + 0, y: k + 0 };\r\n\r\n    return { center, r, pixelSpacing: 0 }\r\n}\r\n\r\nexport const average = (arr: Array<number>) => arr.reduce( ( p, c ) => p + c, 0 ) / (arr.length || 1);\r\n\r\nexport const pixelToCm = (r: number, pixelSpacing: number | string) => {\r\n    if (pixelSpacing && r > 0) {\r\n        const spacing = verifyPixelSpacing(pixelSpacing);\r\n        return (r * spacing) / 10;\r\n    }\r\n    return r;\r\n};\r\n\r\nexport const cmToPixel = (r: number, pixelSpacing: number | string) => {\r\n    if (pixelSpacing && r > 0) {\r\n        const spacing = verifyPixelSpacing(pixelSpacing);\r\n        return (r * 10) / spacing;\r\n    }\r\n    return r;\r\n}\r\n\r\nconst verifyPixelSpacing = (pixelSpacing: number | string) => {\r\n    if(_.isString(pixelSpacing)){\r\n        return parseFloat(pixelSpacing && pixelSpacing.split(\"\\\\\")[0]);\r\n    }\r\n    return pixelSpacing;\r\n}","import React, { useState } from 'react';\r\nimport { Point, Circle } from \"../utils/Models\";\r\nimport { Input, Select, Col, Row, Button } from 'antd';\r\nimport { NumericInput } from \"./common\"\r\nimport { cmToPixel, pixelToCm } from \"../utils/math\";\r\nimport styled from \"styled-components\";\r\nimport _ from \"lodash\";\r\n\r\nconst { Option } = Select;\r\n\r\ntype Option = \"px\" | \"cm\" | any;\r\n\r\ntype Props = {\r\n    handlePointsButton: (state: boolean) => void;\r\n    handleReset: (state: boolean) => void;\r\n    handleRadiusChange: (value: number) => void;\r\n    points: Point[];\r\n    circle: Circle;\r\n    radius: any;\r\n    pixelSpacing: number;\r\n}\r\n\r\nconst PointCenterMenu = (props: Props) => {\r\n \r\n    const [selectState, setSelectState] = useState<Option>(\"px\");\r\n\r\n    const onInputChange = (input : string) => {\r\n        \r\n        const r = parseFloat(input); \r\n\r\n        if(selectState === \"cm\")\r\n        {\r\n            const radius = cmToPixel(r,props.pixelSpacing);\r\n            props.handleRadiusChange(radius);\r\n        }\r\n        else{\r\n            props.handleRadiusChange(r || 0);\r\n        }\r\n    }\r\n\r\n    const onOptionChange = (e : Option) => {\r\n        props.handleRadiusChange(0);\r\n        setSelectState(e);\r\n    }\r\n\r\n    const displayRadius = (value : number) => {\r\n\r\n        if(selectState === \"cm\"){\r\n            return pixelToCm(value, props.pixelSpacing);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={24}>\r\n                    <InputWrapper compact>\r\n                        <NumericInput \r\n                            disabled={props.points.length === 1}\r\n                            defaultValue={0}\r\n                            // style={{ width: '50%' }} \r\n                            value={displayRadius(props.radius)} \r\n                            onChange={e => onInputChange(e)}   \r\n                        />\r\n                        \r\n                        <CSelect defaultValue=\"px\" value={selectState} onChange={e => onOptionChange(e)}>\r\n                            <Option value=\"cm\">cm</Option>\r\n                            <Option value=\"px\">px</Option>\r\n                        </CSelect>\r\n                    </InputWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={12} >\r\n                    {\r\n                        props.points.length === 1 ?\r\n                            <CButton onClick={() => props.handleReset(true)}>Resetuj</CButton>\r\n                            :\r\n                            <CButton onClick={() => props.handlePointsButton(true)}> Wyznacz środek</CButton>\r\n                    }\r\n                </Col>\r\n                <Col span={12}>{props.points.length} / 1</Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputWrapper = styled(Input.Group)`\r\n    display: flex !important;\r\n    flex-direction: row;\r\n`\r\nconst CSelect = styled(Select)`\r\n    width: 60%;\r\n`\r\nconst CInput = styled(Input)`\r\n    width: 100% !important;\r\n`\r\nconst CButton = styled(Button)`\r\n    width: 100%;\r\n`\r\n\r\nexport default PointCenterMenu;","import React, { useState } from 'react'\r\nimport { Button, Row, Col, Statistic } from \"antd\";\r\nimport { } from \"styled-components\";\r\nimport { Point, Circle } from \"../utils/Models\";\r\nimport styled from \"styled-components\"\r\nimport { pixelToCm } from \"../utils/math\"\r\n\r\ntype Props = {\r\n    handlePointsButton: (state: boolean) => void;\r\n    handleReset: (state: boolean) => void;\r\n    points: Point[];\r\n    circle: Circle;\r\n}\r\n\r\nconst ThreePointsMenu = (props: Props) => {\r\n\r\n    const { circle: { center, r, pixelSpacing }, } = props;\r\n    return (\r\n        <Menu>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={12} >\r\n                    {\r\n                        props.points.length === 3 ?\r\n                            <CButton onClick={() => props.handleReset(true)}>Resetuj</CButton>\r\n                            :\r\n                            <CButton onClick={() => props.handlePointsButton(true)}> Wyznacz punkty</CButton>\r\n                    }\r\n                </Col>\r\n                <Col span={12}>{props.points.length} / 3</Col>\r\n            </Row>\r\n            {\r\n                props.points.length === 3 &&\r\n                <>\r\n                    <Row gutter={[16, 16]}>\r\n                        <Col span={24} >\r\n                            <Statistic title=\"Środek\" value={`[ ${center.x.toFixed(3)}, ${center.y.toFixed(3)} ]`} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={[16, 16]}>\r\n                        <Col span={24} >\r\n                            <Statistic title=\"Promień\" suffix=\"px\" value={r.toFixed(3)} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={[16, 16]}>\r\n                        <Col span={24} >\r\n                            <Statistic title=\"Promień\" suffix=\"cm\" value={pixelToCm(r,pixelSpacing).toFixed(3)} />\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            }\r\n\r\n        </Menu>\r\n    )\r\n}\r\n\r\nconst Menu = styled.div`\r\n\r\n`\r\nconst CButton = styled(Button)`\r\n    width: 100%;\r\n`\r\n\r\nexport default ThreePointsMenu;","import React, { Component } from \"react\";\r\nimport DwvComponent from \"../components/dwv/DwvComponent\";\r\nimport PointCenterMenu from \"../components/PointCenterMenu\";\r\nimport ThreePointsMenu from \"../components/ThreePointsMenu\";\r\n\r\nimport { Row, Col } from \"antd\";\r\nimport { CustomCard, CustomSelect } from \"../components/common\";\r\nimport { Point, Circle } from \"../utils/Models\";\r\n\r\nimport { getCircleThrough3Point } from \"../utils/math\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {};\r\n\r\ntype MenuOption = \"3point\" | \"1pointcenter\" | null;\r\n\r\ntype State = {\r\n    isDicomLoaded: boolean;\r\n    option: number;\r\n    draw: boolean;\r\n    points: Point[];\r\n    circle: Circle;\r\n    canChoosePoints: boolean;\r\n    reset: boolean;\r\n    menuOption: MenuOption;\r\n    radius: number;\r\n    pixelSpacing: number;\r\n};\r\n\r\nclass DwvView extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isDicomLoaded: false,\r\n            option: 0,\r\n            draw: false,\r\n            points: [],\r\n            circle: { center: { x: 0, y: 0 }, r: 0 , pixelSpacing: 0 },\r\n            canChoosePoints: false,\r\n            reset: false,\r\n            menuOption:  null,\r\n            radius: 0,\r\n            pixelSpacing: 0,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { isDicomLoaded, draw, circle , reset, pixelSpacing } = this.state;\r\n\r\n        return (\r\n            <Dwv>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={6}>\r\n                        <CustomCard title=\"Konfiguruj\">\r\n                            <>\r\n                                <Row gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <CustomSelect\r\n                                            options={this.options}\r\n                                            onChange={e => this.handleOptionChange(e)}\r\n                                            placeholder=\"Wybierz opcję\"\r\n                                            disabled={!isDicomLoaded}\r\n                                            title=\"Uwaga!\"\r\n                                            infoContent={<>Aby móć wybrać opcję wgraj plik DIcom</>}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                {this.action()}\r\n                            </>\r\n                        </CustomCard>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <DwvComponent\r\n                            handleDicomLoadedState={this.handleDicomLoadedState}\r\n                            handleReset={this.handleReset}\r\n                            handlePixelSpacing={this.handlePixelSpacing}\r\n                            draw={draw}\r\n                            reset={reset}\r\n                            handleDraw={this.handleDraw}\r\n                            addPoint={this.handleAddPoint}\r\n                            circle={circle}\r\n                            hasPixelSpacing={Boolean(pixelSpacing)}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6}></Col>\r\n                </Row>\r\n            </Dwv>\r\n        );\r\n    }\r\n\r\n    handleDicomLoadedState = (state: boolean) => {\r\n        this.setState({ isDicomLoaded: state });\r\n    };\r\n\r\n    handlePixelSpacing = (value : string) => {\r\n        const pixelSpacing = parseFloat(value.split(\"\\\\\")[0]);\r\n\r\n        this.setState({pixelSpacing})\r\n    }\r\n\r\n    handleDraw = (state: boolean) => {\r\n        this.setState({ draw: state });\r\n    };\r\n\r\n    handleOptionChange = (e: number ) => {\r\n        if(e === 1){\r\n            this.setState({menuOption: \"3point\"})\r\n        }\r\n        else if(e == 2){\r\n            this.setState({menuOption:\"1pointcenter\"})\r\n        } \r\n        this.setState({option: e})    \r\n    }\r\n\r\n    handleRadiusChange = (value: number) => {\r\n        this.setState({radius: value });\r\n    }\r\n\r\n    handleReset = (state: boolean) => {\r\n        if(state){\r\n            this.setState({ points: [], radius: 0 });\r\n        }\r\n        this.setState({ reset: state} );\r\n    };\r\n\r\n    handlePointsButton = (state: boolean) => {\r\n        this.setState({ canChoosePoints: state });\r\n    };\r\n\r\n    action = () => {\r\n        const { option, points, circle, radius, pixelSpacing } = this.state;\r\n\r\n        switch (option) {\r\n            case 1:\r\n                return (\r\n                    <ThreePointsMenu\r\n                        handlePointsButton={this.handlePointsButton}\r\n                        points={points}\r\n                        circle={circle}\r\n                        handleReset={this.handleReset}\r\n                    />\r\n                );\r\n            case 2:\r\n                return <PointCenterMenu \r\n                            handlePointsButton={this.handlePointsButton} \r\n                            points={points} \r\n                            circle={circle} \r\n                            pixelSpacing={pixelSpacing}\r\n                            handleReset={this.handleReset} \r\n                            handleRadiusChange={this.handleRadiusChange}\r\n                            radius={radius}\r\n                    />;\r\n            default:\r\n                return <></>;\r\n        }\r\n    };\r\n\r\n    handleAddPoint = (a: number, b: number, ) => {\r\n        const { points, canChoosePoints, menuOption, pixelSpacing } = this.state;\r\n        \r\n        const point: Point = { x: a, y: b };\r\n\r\n\r\n        switch (menuOption) {\r\n            case \"3point\":\r\n                if (points.length < 3 && canChoosePoints) {\r\n                    this.setState({ points: [...points, point] }, () => {\r\n                        if (this.state.points.length === 3) {\r\n                            let circle: Circle = getCircleThrough3Point(\r\n                                this.state.points[0],\r\n                                this.state.points[1],\r\n                                this.state.points[2]\r\n                            );\r\n                            circle.pixelSpacing = pixelSpacing;\r\n                            \r\n                            this.setState(\r\n                                {\r\n                                    draw: true,\r\n                                    circle,\r\n                                    canChoosePoints: false,\r\n                                },\r\n                                () => this.handleDraw(false)\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n                break;\r\n        \r\n            case \"1pointcenter\":\r\n                if(points.length < 1 && canChoosePoints){\r\n                    \r\n                    const { radius } = this.state;\r\n\r\n                    this.setState({ points: [...points, point] }, () => {\r\n                        if (this.state.points.length === 1) {\r\n\r\n                            const circle: Circle = { center : { x: point.x, y: point.y }, r: radius, pixelSpacing }; \r\n\r\n                            this.setState(\r\n                                {\r\n                                    draw: true,\r\n                                    circle: circle,\r\n                                    canChoosePoints: false,\r\n                                },\r\n                                () => this.handleDraw(false)\r\n                            );\r\n                        }\r\n                    });\r\n                }    \r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        \r\n    };\r\n\r\n    options = [\r\n        {\r\n            label: \"Koło na podstawie trzech punktów\",\r\n            value: 1,\r\n        },\r\n        {\r\n            label: \"Koło środek, promień\",\r\n            value: 2,\r\n        },\r\n    ];\r\n}\r\n\r\nconst Dwv = styled.div`\r\n    padding: 50px;\r\n`;\r\n\r\nexport default DwvView;\r\n","import React from 'react';\r\nimport DwvView from \"./views/DwvView\";\r\n\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DwvView/>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}